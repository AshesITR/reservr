% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tf_compile.R
\name{tf_with_disable_graph}
\alias{tf_with_disable_graph}
\alias{tf_is_graph_disabled}
\title{Temporarily disable TensorFlow graph function compilation}
\usage{
tf_with_disable_graph(expr)

tf_is_graph_disabled()
}
\arguments{
\item{expr}{expression to evaluate with disabled graph compilation}
}
\value{
\code{tf_with_disable_graph} evaluates \code{expr} with all calls to \code{\link[tensorflow:tf_function]{tensorflow::tf_function()}} transparently ignored.

\code{tf_is_graph_disabled} checks if graph compilation is currenty disabled
}
\description{
This can be very useful for debugging tensorflow functions.
Errors raised during TensorFlow functions code evaluation do not yield usable
line numbers for the R implementation. With graph compilation disabled, the
resulting functions will be run as regular R functions instead.
}
\details{
\code{tf_with_disable_graph} accomplishes its function by temporarily overwriting \code{\link[tensorflow:tf_function]{tensorflow::tf_function()}} in the
package tensorflow. After evaluation, \code{\link[tensorflow:tf_function]{tensorflow::tf_function()}} is automatically restored.
}
\examples{
dist <- dist_dirac()
# TensorFlow functions are functions of class
# c("tensorflow.python.eager.def_function.Function", "python.builtin.object")
if (keras::is_keras_available()) {
  stopifnot(class(dist$tf_logdensity()) != "function")
  stopifnot(class(tf_with_disable_graph(dist$tf_logdensity())) == "function")
}

stopifnot(!tf_is_graph_disabled())
stopifnot(tf_with_disable_graph(tf_is_graph_disabled()))

}
